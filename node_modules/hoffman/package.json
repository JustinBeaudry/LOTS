{
  "name": "hoffman",
  "version": "0.1.1",
  "description": "view engine for dust",
  "main": "index.js",
  "dependencies": {
    "duster": "~0.3.2"
  },
  "devDependencies": {
    "chai": "~0.1.5",
    "istanbul": "~0.1.32",
    "mocha": "~1.8.2",
    "grunt": "~0.4.0",
    "grunt-cli": "~0.1.6",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-mocha-test": "~0.2.0",
    "grunt-shell": "~0.2.1"
  },
  "scripts": {
    "test": "node_modules/grunt-cli/bin/grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:diffsky/hoffman.git"
  },
  "author": {
    "name": "Matthew Hadley",
    "email": "matthew.hadley@gmail.com"
  },
  "contributors": [
    {
      "name": "Mike Ridgway",
      "url": "https://github.com/mridgway"
    }
  ],
  "license": "MIT",
  "readmeFilename": "README.md",
  "keywords": [
    "dust",
    "dust.js",
    "express",
    "expressjs",
    "view",
    "engine"
  ],
  "readme": "# Hoffman [![](https://travis-ci.org/diffsky/hoffman.png)](https://travis-ci.org/diffsky/hoffman)\n\nA [dust.js](https://github.com/linkedin/dustjs) view engine for [express](https://github.com/visionmedia/express).\n\n## Usage\n\nHoffman is installable via npm\n\n    npm i hoffman\n\n### Inside app.js\n\n```\nvar hoffman = require('hoffman');\n\napp.set('views', path.join(__dirname, 'templates')); // path to your templates\napp.set('view engine', 'dust');\napp.engine('dust', hoffman.__express());\n\n// works with caching\napp.set('view cache', true);\n\n// optionally load all templates into dust cache on server start\nhoffman.prime(app.settings.views);\n```\n\n### Rendering\n\nReference templates by name, without extension.\n\nInside a route:\n\n    res.render('index', {\"planet\" : \"world\"});\n\nInside of a template:\n\n    hello {>partial/}\n\nAll references are from the root of the views directory. Regardless of where the host template resides.\n\n### Streaming\n\nHoffman supports streaming the response, by augmenting the response object via middleware:\n\n    app.use(hoffman.stream);\n\nYou can then call `res.stream` instead of `res.render`. If you pass a callback, you will recieve the stream\nobject back to do with what you want, otherwise content will be streamed via `res.write()` as chunks of the\ntemplate are rendered. See the `stream` method code for more details.\n\n\n### Cache Priming\n\nWith `view cache` set to `true`, templates will be cached in memory the first time they are read off disk.\n\nWith `hoffman.prime(app.settings.views)` all templates inside of the view directory\nwill be read into memeory on server start, meaning no first disk access after the server has started.\n\n## Tests\n\nHoffman comes with unit tests, code coverage reports, and jshint linting, run via:\n\n    npm test\n\n![dustin](https://raw.github.com/wiki/diffsky/hoffman/hoffman.jpg)\n",
  "bugs": {
    "url": "https://github.com/diffsky/hoffman/issues"
  },
  "_id": "hoffman@0.1.1",
  "_from": "hoffman@~0.1.1"
}
