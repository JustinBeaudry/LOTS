var diveSync = require("diveSync")
  , path = require('path')
  , fs = require('fs')
  , dust = require('dustjs-helpers');

var opt = {
  recursive: true,
  all: false,
  directories: false,
  filter: function filter(node, dir) {
    if(node.indexOf('.dust') != -1) return true;
    if(dir) return true;
    return false;
  }
}

function prime(locations) {
  if (!Array.isArray(locations)){
    locations = [{path:locations}];
  }
  for(var i in locations) (function(location) {
    location.namespace = location.namespace || '';
    diveSync(location.path, opt, function(err, file) {
      dust.loadSource(dust.compile(
        fs.readFileSync(file, 'utf8'),
        location.namespace+path.relative(location.path, file).slice(0,-5)
      ));
    })
  })(locations[i]);
}

module.exports = {
  prime: prime,
  dust: dust
}